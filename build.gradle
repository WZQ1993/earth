buildscript {
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }
    dependencies {
        //构建脚本的依赖
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}" as Object)
    }
}

subprojects {
    /* 使用二进制插件 */
    apply plugin: 'java' /* java是Gradle的核心插件，是内置的，内置插件不需要配置依赖路径 */
    apply plugin: 'idea' /* 同上  让Gradle自动生成Intellij的项目文件*/
    /* 注意gradle插件不再自动应用，所以这里需要指定 */
    apply plugin: 'org.springframework.boot'
    /* 依赖管理插件仍然是一个spring-boot-gradle-plugin传递依赖，所以无需在build.gradle配置中明确列出此依赖。 */
    apply plugin: 'io.spring.dependency-management' /* 依赖管理，用来传递spring的依赖 */

    group 'com.ziqingwang'
    version '0.0.1'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    // 指定编码格式
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }
    dependencies {
        testCompile "junit:junit:4.13"

        compile "org.springframework.boot:spring-boot-starter-test"
        compile "org.springframework.boot:spring-boot-starter-actuator"
        compile "org.springframework.boot:spring-boot-starter-web"
        compile "org.slf4j:slf4j-api:1.7.24"
        compile "commons-codec:commons-codec:1.10"
        compile "com.alibaba:fastjson:1.2.24"
        compile "com.google.guava:guava:21.0"
        compile "org.apache.commons:commons-lang3:3.5"
    }
    //排除依赖
    configurations {
        all*.exclude group: 'log4j', module: 'log4j'
    }
}
